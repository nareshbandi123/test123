///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SQLDMTestAutomation.SSMSRecordingds
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ExecuteQuery recording.
    /// </summary>
    [TestModule("19abc944-3e0a-4494-bd1a-0fff3c2498b9", ModuleType.Recording, 1)]
    public partial class ExecuteQuery : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SQLDMTestAutomation.SQLDMTestAutomationRepository repository.
        /// </summary>
        public static SQLDMTestAutomation.SQLDMTestAutomationRepository repo = SQLDMTestAutomation.SQLDMTestAutomationRepository.Instance;

        static ExecuteQuery instance = new ExecuteQuery();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ExecuteQuery()
        {
            TestCaseName = "";
            SqlQueryFilePath = "";
            SqlQueryFromFile = "";
            _Unbound_ = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ExecuteQuery Instance
        {
            get { return instance; }
        }

#region Variables

        string _TestCaseName;

        /// <summary>
        /// Gets or sets the value of variable TestCaseName.
        /// </summary>
        [TestVariable("86cccdf9-d9b1-40d5-8298-694c3256566b")]
        public string TestCaseName
        {
            get { return _TestCaseName; }
            set { _TestCaseName = value; }
        }

        string _SqlQueryFilePath;

        /// <summary>
        /// Gets or sets the value of variable SqlQueryFilePath.
        /// </summary>
        [TestVariable("ca1532f2-ea11-4bd5-bed7-4203d6618ea5")]
        public string SqlQueryFilePath
        {
            get { return _SqlQueryFilePath; }
            set { _SqlQueryFilePath = value; }
        }

        string _SqlQueryFromFile;

        /// <summary>
        /// Gets or sets the value of variable SqlQueryFromFile.
        /// </summary>
        [TestVariable("66d37589-36b9-4253-94e4-9f24cba87e69")]
        public string SqlQueryFromFile
        {
            get { return _SqlQueryFromFile; }
            set { _SqlQueryFromFile = value; }
        }

        string __Unbound_;

        /// <summary>
        /// Gets or sets the value of variable _Unbound_.
        /// </summary>
        [TestVariable("60e686f6-57a4-467a-8984-99d5d8a38ff1")]
        public string _Unbound_
        {
            get { return __Unbound_; }
            set { __Unbound_ = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SqlQueryFilePath = CommonMethods.GetSqlQueriesFilePath();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", SqlQueryFilePath, new RecordItemIndex(1));
            
            SqlQueryFromFile = CommonMethods.ReadTextFile(SqlQueryFilePath);
            Delay.Milliseconds(0);
            
            SendQueryToSqlEditor(SqlQueryFromFile);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'SSMS.MicrosoftSQLServerManagementStudio.Execute' at Center.", repo.SSMS.MicrosoftSQLServerManagementStudio.ExecuteInfo, new RecordItemIndex(4));
            repo.SSMS.MicrosoftSQLServerManagementStudio.Execute.MoveTo();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SSMS.MicrosoftSQLServerManagementStudio.Execute' at Center.", repo.SSMS.MicrosoftSQLServerManagementStudio.ExecuteInfo, new RecordItemIndex(5));
            repo.SSMS.MicrosoftSQLServerManagementStudio.Execute.Click();
            Delay.Milliseconds(200);
            
            //CommonMethods.ExecuteQueryTest();
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
